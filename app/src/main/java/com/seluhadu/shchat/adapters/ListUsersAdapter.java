package com.seluhadu.shchat.adapters;import android.content.Context;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.bumptech.glide.Glide;import com.google.android.gms.tasks.OnSuccessListener;import com.google.firebase.firestore.FirebaseFirestore;import com.google.firebase.firestore.Query;import com.google.firebase.firestore.QueryDocumentSnapshot;import com.google.firebase.firestore.QuerySnapshot;import com.seluhadu.shchat.R;import com.seluhadu.shchat.models.User;import java.util.List;import static android.support.constraint.Constraints.TAG;public class ListUsersAdapter extends RecyclerView.Adapter<ListUsersAdapter.ItemHolder>{    private List<User> mListUserChat;    private Context mContext;    private FirebaseFirestore mFireBaseFireStore;    @NonNull    @Override    public ItemHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View rootView = LayoutInflater.from(mContext).inflate(R.layout.item_list_chat_user, parent, false);        mFireBaseFireStore = FirebaseFirestore.getInstance();        return new ItemHolder(rootView);    }    @Override    public void onBindViewHolder(@NonNull ItemHolder holder, int position) {    }    @Override    public int getItemCount() {        return 0;    }    class ItemHolder extends RecyclerView.ViewHolder {        TextView mUserName;        TextView mMessage;        TextView mDate;        public ItemHolder(View itemView) {            super(itemView);            mUserName = itemView.findViewById(R.id.user_name);            mMessage = itemView.findViewById(R.id.message_time);            mDate = itemView.findViewById(R.id.last_message);        }    }    private void getProfileAndName(final HomeAdapter.ItemHolder holder, int position) {        Query query = mFireBaseFireStore.collection(mContext.getResources().getString(R.string.users))//                .orderBy(mContext.getResources().getString(R.string.userId /*userId*/))                .whereEqualTo(mContext.getString(R.string.userId), posts.get(position).getUserId());        Log.d(TAG, "getProfileAndName: ");        query.get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {            @Override            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {                for (QueryDocumentSnapshot documentSnapshot : queryDocumentSnapshots) {                    User user = documentSnapshot.toObject(User.class);                    holder.mUserName.setText(user.getUserDisplayName());                    Glide.with(mContext).load(user.getUserProfile()).into(holder.mProfile);                    Glide.with(mContext).load(user.getUserProfile()).into(holder.mPostImage);                    Log.d(TAG, "onSuccess: "+ user.getUserDisplayName());                }            }        });    }}