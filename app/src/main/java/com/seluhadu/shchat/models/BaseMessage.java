package com.seluhadu.shchat.models;import android.util.Log;import com.google.firebase.firestore.DocumentChange;import com.seluhadu.shchat.models.FileMessage;import com.seluhadu.shchat.models.User;import com.seluhadu.shchat.models.UserMessage;import java.util.HashMap;import static android.support.constraint.Constraints.TAG;public abstract class BaseMessage {    private String userId;    private String receiverId;    private long messageId;    private long createdAt;    private long updatedAt;    private String msgType;    public static BaseMessage build(DocumentChange documentChange, String senderId, String receiverId) {        try {            HashMap<String, Object> message = (HashMap<String, Object>) documentChange.getDocument().getData();            String type = documentChange.getDocument().get("msgType").toString();            byte var = -1;            switch (type.hashCode()) {                case 1214132:                    if (type.equals("FILE")) {                        var = 3;                    }                case 324234:                    if (type.equals("USMG")) {                        var = 2;                    }            }            String msgType;            String userMessage;            long messageId;            long createdAt;            User user;            switch (var) {                case 2:                    userMessage = message.get("userId").toString();                    msgType = message.get("userId").toString();                    messageId = (long) message.get("userId");                    createdAt = (long) message.get("userId");                    long massageUpdateAt = message.containsKey("updatedAt") ? (long) message.get("updatedAt") : 0L;                    return new UserMessage(UserMessage.build(senderId, receiverId, userMessage, msgType, createdAt, massageUpdateAt                            , messageId));                case 3:                    user = new User();                    messageId = (long) message.get("messageId");                    createdAt = (long) message.get("createId");                    long fileUpdateAt = message.containsKey("updatedAt") ? (long) message.get("updatedAt") : 0L;                    String url = message.get("url").toString();                    String name = message.get("name").toString();                    String fileType = message.get("type").toString();                    String customType = message.get("type").toString();                    String data = message.get("userId").toString();                    int size = (int) message.get("size");                    return new FileMessage(FileMessage.build(user, senderId, receiverId, url, name, size, fileType, data, customType, createdAt, fileUpdateAt, messageId));            }        } catch (Exception e) {            Log.d(TAG, "Error: " + e.getMessage());        }        return null;    }    protected BaseMessage(HashMap<String, Object> obj) {        this.userId = obj.get("userId").toString();        this.receiverId = obj.get("receiverId").toString();        this.msgType = obj.get("msgType").toString();        this.messageId = (long) obj.get("messageId");        this.createdAt = (long) obj.get("createdAt");        this.updatedAt = (long) obj.get("updatedAt");    }    HashMap<String, Object> toJson() {        HashMap<String, Object> obj = new HashMap<>();        obj.put("userId", this.messageId);        obj.put("receiverId", this.receiverId);        obj.put("msgType", this.msgType);        obj.put("createdAt", this.createdAt);        obj.put("updatedAt", this.updatedAt);        obj.put("messageId", this.messageId);        return obj;    }    public String getMsgType() {        return msgType;    }    public void setReceiverId(String receiverId) {        this.receiverId = receiverId;    }    public void setMsgType(String msgType) {        this.msgType = msgType;    }    public String getUserId() {        return userId;    }    public void setUserId(String userId) {        this.userId = userId;    }    public String getReceiverId() {        return receiverId;    }    public long getMessageId() {        return messageId;    }    public void setMessageId(long messageId) {        this.messageId = messageId;    }    public long getCreatedAt() {        return createdAt;    }    public void setCreatedAt(long createdAt) {        this.createdAt = createdAt;    }    public long getUpdatedAt() {        return updatedAt;    }    public void setUpdatedAt(long updatedAt) {        this.updatedAt = updatedAt;    }    public abstract static class BaseMessage1 {        private String userId;        private String receiverId;        private long messageId;        private long createdAt;        private long updatedAt;        private String msgType;        public BaseMessage1() {        }        protected static BaseMessage build(DocumentChange documentChange, String senderId, String receiverId) {            try {                HashMap<String, Object> message = (HashMap<String, Object>) documentChange.getDocument().getData();                String type = documentChange.getDocument().get("msgType").toString();                byte var = -1;                switch (type.hashCode()) {                    case 1214132:                        if (type.equals("FILE")) {                            var = 3;                        }                    case 324234:                        if (type.equals("USMG")) {                            var = 2;                        }                }                String userId;                String receiver;                String msgType;                String userMessage;                long messageId;                long createdAt;                switch (var) {                    case 2:                        userId = message.get("userId").toString();                        receiver = message.get("userId").toString();                        userMessage = message.get("userId").toString();                        msgType = message.get("userId").toString();                        messageId = (long) message.get("userId");                        createdAt = (long) message.get("userId");                        long updateAt = message.containsKey("updatedAt") ? (long) message.get("updatedAt") : 0L;                        return new UserMessage(UserMessage.build(userId, receiver, userMessage, msgType, createdAt, updateAt, messageId));                    case 3:                        return null;                }            } catch (Exception e) {                Log.d(TAG, "Error: " + e.getMessage());            }            return null;        }        protected BaseMessage1(HashMap<String, Object> obj) {            this.userId = obj.get("userId").toString();            this.receiverId = obj.get("receiverId").toString();            this.msgType = obj.get("msgType").toString();            this.messageId = (long) obj.get("messageId");            this.createdAt = (long) obj.get("createdAt");            this.updatedAt = (long) obj.get("updatedAt");        }        HashMap<String, Object> toJson() {            HashMap<String, Object> obj = new HashMap<>();            obj.put("userId", this.messageId);            obj.put("receiverId", this.receiverId);            obj.put("msgType", this.msgType);            obj.put("createdAt", this.createdAt);            obj.put("updatedAt", this.updatedAt);            obj.put("messageId", this.messageId);            return obj;        }        public String getMsgType() {            return msgType;        }        public void setReceiverId(String receiverId) {            this.receiverId = receiverId;        }        public void setMsgType(String msgType) {            this.msgType = msgType;        }        public String getUserId() {            return userId;        }        public void setUserId(String userId) {            this.userId = userId;        }        public String getReceiverId() {            return receiverId;        }        public long getMessageId() {            return messageId;        }        public void setMessageId(long messageId) {            this.messageId = messageId;        }        public long getCreatedAt() {            return createdAt;        }        public void setCreatedAt(long createdAt) {            this.createdAt = createdAt;        }        public long getUpdatedAt() {            return updatedAt;        }        public void setUpdatedAt(long updatedAt) {            this.updatedAt = updatedAt;        }    }}