package com.seluhadu.shchat.utils;import android.content.Context;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.os.AsyncTask;import android.util.Log;import java.io.IOException;import java.net.HttpURLConnection;import java.net.URL;public class InternetUtils {    private static final String TAG = "InternetUtils";    private static boolean isNetworkAvailable(Context context) {        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo networkInfo = cm.getActiveNetworkInfo();        return networkInfo != null && networkInfo.isConnectedOrConnecting();    }    public static boolean hasActiveInternetConnection(Context context, String url) {        if (isNetworkAvailable(context)) {            try {                HttpURLConnection httpURLConnection = (HttpURLConnection) (new URL(url).openConnection());                httpURLConnection.setRequestProperty("User-Agent", "Test");                httpURLConnection.setRequestProperty("Connection", "close");                httpURLConnection.setConnectTimeout(1500);                httpURLConnection.connect();                return (httpURLConnection.getResponseCode() == 200);            } catch (IOException e) {                Log.e(TAG, "Error checking internet connection", e);            }        } else {            Log.d(TAG, "No network available!");        }        return false;    }    public static class isInternetAvelable extends AsyncTask<String, Void, Boolean> {        @Override        protected Boolean doInBackground(String... strings) {            try {                HttpURLConnection httpURLConnection = (HttpURLConnection) (new URL(strings[0]).openConnection());                httpURLConnection.setRequestProperty("User-Agent", "Test");                httpURLConnection.setRequestProperty("Connection", "close");                httpURLConnection.setConnectTimeout(1500);                httpURLConnection.connect();                return (httpURLConnection.getResponseCode() == 200);            } catch (IOException e) {                Log.e(TAG, "Error checking internet connection", e);            }            return null;        }    }}